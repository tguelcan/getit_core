test(`DELETE /${apiEndpoint}/:id 200`, async () => {
    const { status } = await request(server)
        .delete(`${serverConfig.endpoint}/${apiEndpoint}/${dataObject.id}`)
        
    expect(status).toBe(200)
})

test(`DELETE /${apiEndpoint}/:id 404`, async () => {
    const { status } = await request(server)
        .delete(`${serverConfig.endpoint}/${apiEndpoint}/123456789098765432123456`)
        
    expect(status).toBe(404)
})

test(`DELETE /${apiEndpoint}/all 401`, async () => {
    const { status, body, header } = await request(server)
        .delete(`${serverConfig.endpoint}/${apiEndpoint}/all`)
        
    expect(status).toBe(401)
    expect(header['content-type']).toBe('application/json')
    expect(body.code).toBe('Unauthorized')
})

test(`DELETE /${apiEndpoint}/all 200`, async () => {
    const { status } = await request(server)
        .delete(`${serverConfig.endpoint}/${apiEndpoint}/all`)
        .set('Authorization', 'Bearer ' + adminToken)

    expect(status).toBe(200)
})

test(`DELETE /${apiEndpoint}/all 401`, async () => {
    const { status } = await request(server)
        .delete(`${serverConfig.endpoint}/${apiEndpoint}/all`)
        .set('Authorization', 'Bearer ' + defaultToken)

    expect(status).toBe(401)
})
    